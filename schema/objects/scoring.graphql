union Scoreable = Participant | Team
type Scoring implements Node & UserCreated {
  "Globally unique id"
  gid: ID!
  "Globally unique id with timeliness check"
  tid: AmseTID!

  group: Group!
  value: Int!
  of: Scoreable!

  "the attributes of this entity"
  attributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeValueConnection!
  "Wether this entity is archived"
  archived: Boolean!
  "The creation date of this entity"
  createdAt: DateTime!
  "The last time this entity was updated"
  updatedAt: DateTime!
  "The user who created this entity"
  createdBy: User!
  "The user who last updated this entity"
  updatedBy: User!
  "the full AuditLog of this entity"
  auditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!
}
type ScoringConnection {
  count: Int!
  edges: [ScoringEdge!]!
  pageInfo: PageInfo!
}
type ScoringEdge {
  cursor: PaginationCursor!
  node: Scoring!
}
