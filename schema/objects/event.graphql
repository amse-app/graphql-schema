"Events are the clients of the application, which seperate data across the graph"
type Event implements Node & UserCreated {
  "Globally unique id"
  gid: ID!
  "Globally unique id with timeliness"
  tid: AmseTID!

  "unique identifier for this event"
  id: String!
  "name of this event"
  name: String!
  "description of this event"
  description: String

  "The user responsible for this event"
  owner: User!

  "The full AuditLog of all items part of this event, except users"
  fullAuditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!

  "The competitions of this event"
  competitions(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): CompetitionConnection!
  "The disciplines of this event"
  disciplines(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): DisciplineConnection!
  "The groups of this event"
  groups(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): GroupConnection!
  "The participants of this event"
  participants(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): ParticipantConnection!
  "The teams of this event"
  teams(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): TeamConnection!
  "The Users with access to this event"
  users(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): UserEventsRelConnection!
  "The attributes of this event (entity)"
  attributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeValueConnection!
  "The results of this event"
  results(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): ResultConnection!
  "The scorings of this event"
  scorings(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): ScoringConnection!

  "Get an ShortIdentifiable bu its short"
  short(short: Short!): ShortIdentifiable

  "Get all attributes in this event not in this event-entity"
  allAttributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeConnection!

  "Wether this entity is archived"
  archived: Boolean!
  "The creation date of this event"
  createdAt: DateTime!
  "The last time this event was updated"
  updatedAt: DateTime!
  "The user who created this event"
  createdBy: User!
  "The last user who modified this event"
  updatedBy: User!
  "The complete auditLog regarding this event object"
  auditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!
}

"The Event connection-type"
type EventConnection {
  "Count of the returned events"
  count: Int!
  "The EventEdges"
  edges: [EventEdge!]!
  "The according PageInfo"
  pageInfo: PageInfo!
}

"The Event edge-type"
type EventEdge {
  "The PaginationCursor of this Edge"
  cursor: PaginationCursor!
  "The Node of this Edge"
  node: Event!
}
