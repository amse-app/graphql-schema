"The amse tid scalar; serialized to a string"
scalar AmseTID

"A Date serialized as int in milliseconds since unix epoch"
scalar Date

"A Date with time serialized as int in milliseconds since unix epoch"
scalar DateTime

"The Node interface for refetching"
interface Node {
  "Globally unique id"
  gid: ID!
  "Globally unique id with timeliness check"
  tid: AmseTID!
}

"The interface for user created and managed entities"
interface UserCreated {
  "The attributes of this entity"
  attributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeValueConnection!
  "Wether this entity is archived"
  archived: Boolean!
  "The creation date of this entity"
  createdAt: DateTime!
  "The last time this entity was updated"
  updatedAt: DateTime!
  "The user who created this entity"
  createdBy: User!
  "The user who last updated this entity"
  updatedBy: User!
  "The full AuditLog of this entity"
  auditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!
}

"Id with a length of 4; unique in one event"
scalar Short

"An entity which is identifiable by its short id"
interface ShortIdentifiable implements Node & UserCreated {
  "Globally unique id"
  gid: ID!
  "Globally unique id with timeliness check"
  tid: AmseTID!

  short: Short!
  name: String!
  description: String

  "The attributes of this entity"
  attributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeValueConnection!
  "Wether this entity is archived"
  archived: Boolean!
  "The creation date of this entity"
  createdAt: DateTime!
  "The last time this entity was updated"
  updatedAt: DateTime!
  "The user who created this entity"
  createdBy: User!
  "The user who last updated this entity"
  updatedBy: User!
  "The full AuditLog of this entity"
  auditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!
}
