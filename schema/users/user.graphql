type User implements Node & UserCreated {
  "Globally unique id"
  gid: ID!
  "Globally unique id with timeliness check"
  tid: AmseTID!

  "The globally unique username"
  username: String!
  "The (real) name of the user"
  name: String!
  "The preferred nickname of the user"
  nickname: String!
  "The events of the user"
  events(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): UserEventsRelConnection!

  "the attributes of this entity"
  attributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeValueConnection!
  "Wether this entity is archived"
  archived: Boolean!
  "The creation date of this user"
  createdAt: DateTime!
  "The last time this user was updated"
  updatedAt: DateTime!
  "The user who created this user"
  createdBy: User!
  "The user who last updated this user"
  updatedBy: User!
  "the full AuditLog of this user"
  auditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!
}
type UserConnection {
  count: Int!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}
type UserEdge {
  cursor: PaginationCursor!
  node: User!
}

type UserEventsRel implements Node & UserCreated {
  "Globally unique id"
  gid: ID!
  "Globally unique id with timeliness check"
  tid: AmseTID!

  event: Event!
  user: User!
  permissions: [Permission!]!

  "the attributes of this entity"
  attributes(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AttributeValueConnection!
  "Wether this entity is archived"
  archived: Boolean!
  "The creation date of this UsersEventsRel"
  createdAt: DateTime!
  "The last time this UsersEventsRel was updated"
  updatedAt: DateTime!
  "The user who created this UsersEventsRel"
  createdBy: User!
  "The user who last updated this UsersEventsRel"
  updatedBy: User!
  "the full AuditLog of this UsersEventsRel"
  auditLog(
    before: PaginationCursor
    after: PaginationCursor
    first: Int
    last: Int
  ): AuditConnection!
}
type UserEventsRelConnection {
  count: Int!
  edges: [UserEventsRelEdge!]!
  pageInfo: PageInfo!
}
type UserEventsRelEdge {
  cursor: PaginationCursor!
  node: UserEventsRel!
}
